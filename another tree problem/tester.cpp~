#include <cstdio>
#include <algorithm>
#include <ctime>
#include <vector>

#define MAXN 1000000

using namespace std;

typedef pair< int, int > pii;

bool visited[ MAXN + 1 ];

vector< int > G[ MAXN + 1 ];
int num = 0, N;

void dfs( int s )
{
	visited[ s ] = true;
	if( num == N - 1 ) return;
	int node, cnt = 0;
	int child = rand() % N + 1;
	do {
		node = rand() % N + 1;
		if( !visited[ node ] ) {
			G[ s ].push_back( node );
			num++;
			dfs( node );
			cnt++;
		}
		if( cnt == child || num == N - 1 ) break;
	} while( true );
}
int main( void )
{
	srand( time( NULL ) );
	N = rand() % 100000;
	freopen("test.in","wt",stdout);
	printf("%d\n", N );
	dfs( 1 );
	for( int i = 1; i <= N; i++ ) {
		if( !G[ i ].size() ) continue;
		for( int j = 0; j < G[ i ].size(); j++ ) {
			int w = rand() % 1001 + 1000;
			printf("%d %d %d\n", i, G[ i ][ j ], w );
		}
	}
	return 0;
}
