#include <cstdio>
#include <algorithm>
#include <vector>

#define MAXN 100100
#define MOD 1000000007
#define X first
#define Y second
#define mp make_pair

using namespace std;

typedef pair< int, int > pii;

vector< pii > T[ MAXN + 1 ];

int sol[ MAXN + 1 ];

void dfs( int root, int s, int p, int ans )
{
	sol[ root ] = ( sol[ root ] % MOD + ans % MOD ) % MOD;
	for( int i = 0; i < T[ s ].size(); i++ ) {
		int v = T[ s ][ i ].X, w = T[ s ][ i ].Y;
		if( v == p ) continue;
		dfs( root, v, s, ( ans % MOD ) * ( w % MOD ) );
	}
}

int main( void )
{
	int N, u, v, w, ans = 0;
	scanf("%d", &N );
	for( int i = 1; i < N; i++ ) {
		scanf("%d%d%d", &u, &v, &w );
		T[ u ].push_back( mp( v, w ) );
		T[ v ].push_back( mp( u, w ) );
	}
	for( int i = 1; i <= N; i++ ) {
		dfs( i, i, -1, 1 );
		ans = ( ans % MOD + sol[ i ] % MOD ) % MOD;
	}
	printf("%d\n", ( ans - N ) / 2 % MOD );
	return 0;
}
