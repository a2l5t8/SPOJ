#include <cstdio>
#include <algorithm>
#include <cstring>

#define MAXN 1100
#define INF 5010

using namespace std;

int number[ MAXN + 1 ], dp[ MAXN + 1 ][ INF + 1 ], N, ans;
int calls = 0;

int main( void )
{
	char c;
	N = 1;
	while( ( c = getchar_unlocked() ) != '=' ) number[ N++ ] = c - '0';
	memset( dp, INF, sizeof( dp ) );
	dp[ N ][ 0 ] = 0;
	for( int i = N - 1; i > 0; i-- ) {
		for( int j = ans; j >= 0; j-- ) {
			int num = 0;
			//dp[ i ][ j ] = dp[ i + 1 ][ j ];
			for( int k = i; k < N; k++ ) {
				num = 10*num + number[ k ];
				printf("num -> %d\n", num );
				if( num + j > ans ) break;
				dp[ i ][ j ] = min( dp[	k + 1 ][ num + j ] + 1, dp[ i ][ j ] );
			}
		}
	}
	printf("%d\n", dp[ 1 ][ ans ] );
	return 0;
}
