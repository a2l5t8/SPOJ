#include <iostream>
#include <cstdio>
#include <algorithm>

using namespace std;

int par[100001];

void makenode(int i)
{
	par[i]=0;
}

int find(int i)
{
	//printf("finding node %d, par[%d]=%d\n",i,i,par[i]);
	while(par[i]!=0) {
		i=find(par[i]);
	}
	return i;
}

void Union(int i,int j)
{
	par[i]=j;
}
	
int main(void)
{
	int N,K,root=0;
	cin >> N >> K;
	int con[N+1];
	for(int i=1; i<=N; i++) {
		makenode(i);
		con[i]=0;
	}
	for(int i=1; i<=K; i++) {
		int M,c;
		cin >> M;
		for(int j=0; j<M; j++) {
			cin >> c;
			//printf("finding node -> %d",c);
			if(find(c)!=i) {
				//cout << "union(" << find(c) << "," << i <<  ")" << endl;
				Union(find(c),i);
			}
		}
	}
	for(int i=1; i<=N; i++) {
		con[par[i]]++;
	}
	for(int i=1; i<=N; i++) {
		if(con[i]>0 && par[i]==0) {
			root=i;
		}
	}
	for(int i=1; i<=N; i++) {
		if(par[i]==0 && i!=root) {
			par[i]=root;
		}
	}
	for(int i=1; i<=N; i++) {
		cout << par[i] << endl;
	}
	return 0;
}
