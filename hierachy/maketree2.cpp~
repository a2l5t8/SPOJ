#include <cstdio>
#include <algorithm>
 
using namespace std;
 
int par[100001];
 
void makenode(int i)
{
	par[i]=i;
}
 
int find(int i)
{
	if( par[ i ] == i ) {
		return par[ i ];
	} else {
		return par[ i ] = find( par[ i ] );
	}
}
 
void Union(int i,int j)
{
	par[i]=j;
}
	
int main(void)
{
	int N,K,root=0;
	scanf("%d%d",&N,&K);
	int con[N+1];
	for(int i=1; i<=N; i++) {
		makenode(i);
		con[i]=0;
	}
	for(int i=1; i<=K; i++) {
		int M,c;
		scanf("%d",&M);
		for(int j=0; j<M; j++) {
			scanf("%d",&c);
			if(find(c)!=i) {
				//cout << "union(" << c << "," << i <<  ")" << endl;
				Union(find(c),i);
			}
		}
	}
	for(int i=1; i<=N; i++) {
		con[par[i]]++;
	}
	for(int i=1; i<=N; i++) {
		if(con[i]>0 && par[i]==i) {
			root=i;
		}
	}
	for(int i=1; i<=N; i++) {
		if(par[i]==i && i!=root) {
			par[i]=root;
		}
	}
	for(int i=1; i<=N; i++) {
		if( i == root ) {
			printf("0\n");
		} else {
			printf("%d\n",par[ i ] );
		}
	}
	return 0;
}
