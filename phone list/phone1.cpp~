#include <cstdio>
#include <cstring>
#include <cstdlib>
 
using namespace std;
 
struct node {
        int children[ 11 ];
        bool isWord;
};
 
const int N = 10000;
 
node Trie[N+1];
int trieNodeCount;
 
void initialize() {
        trieNodeCount = 1;
	for(int i = 0; i <= N; i++ ){
		for(int  j = 0; j <=10; j++ ) {
			Trie[ i ].children[ j ] = 0;
		}
	}
}
 
void add( char *word, int length ) {
        int i, curNode = 1, nextNode;
 
        for ( i = 0; i < length; ++i ) {
                nextNode = Trie[ curNode ].children[ word[ i ] - '0' ];
                if ( nextNode == 0 ) {
                        ++trieNodeCount;
                        Trie[ curNode ].children[ word[ i ] - '0' ] = trieNodeCount;
                        curNode = trieNodeCount;
                }
                else {
                        curNode = nextNode;
                }
        }
        Trie[ curNode ].isWord = 1;
}
 
bool check( char *word, int length ) {
        int i, curNode = 1;
        for ( i = 0; i < length; ++i ) {
                curNode = Trie[ curNode ].children[ word[ i ] - '0' ];
                if ( curNode == 0 ) {
                        return false;
                }
                if ( Trie[ curNode ].isWord == 1 ) {
                        return true;
                }
        }
        return true;
}
 
int length( char *s ) {
        int count = 0, i;
        for ( i = 0; s[ i ] != '\0'; ++i ) {
                ++count;
        }
        return count;
}
 
int main() {
        int t, n;
        bool found = false;
        char s[ 12 ];
        scanf( "%d", &t );
        while ( t > 0 ) {
                initialize();
                scanf( "%d", &n );
                while ( n > 0 ) {
                        scanf( "%s", s );
                        if ( check( s, length( s ) ) ) {
                                found = true;
                        }
                        else {
                                add( s, length( s ) );
                        }
                        --n;
                }
                if ( found ) {
                        printf( "NO\n" );
                }
                else {
                        printf( "YES\n" );
                }
                found = false;
                --t;
        }
}
