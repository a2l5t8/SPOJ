#include<iostream>
#include<stdio.h>
#include<string>
#include<vector>
#include<algorithm>
#include<string.h>
 
 
using namespace std;
 
long long bit[100009];
 
#define MAXN 100008
 
 
struct st {
        char s[10];
        int v;
};
st need[MAXN],norm[MAXN];
 
 
bool compare ( st a, st b ) {
        int value = strcmp (a.s,b.s);
        if ( value < 0 ) return true;
        return false;
}
 
 
 
void add(int pos,int val,int N) {
        while (pos<=N) {
                bit[pos]+=val;
                pos+=(pos & -pos);
        }
        return;
}
 
int sum(int pos) {
        int ans=0;
        while (pos>0) {
                ans+=bit[pos];
                pos-=(pos & -pos);
        }
        return ans;
}
       
 
int main () {
        //freopen("chaos.in","r",stdin);
        //freopen("chaos.out","w",stdout);
        int N;
        scanf("%d",&N);
       
        for (int i=0;i<N;i++)
                scanf("%s",norm[i].s);
 
for (int i=0;i<N;i++) {
        int len=strlen(norm[i].s);
        for (int j=len-1;j>=0;j--)
                need[i].s[(len-1)-j]=norm[i].s[j];
        need[i].v=i+1;
}
 
        sort(need,need+N,compare);
       
        for (int i=0;i<N;i++)
                norm[need[i].v-1].v=i+1;
       
        sort(norm,norm+N,compare);
       
        long long ans=0;
       
        for (int i=N-1;i>=0;i--) {
                ans+=sum(norm[i].v);
                add(norm[i].v,1,N);
        }
       
        printf("%lld\n",ans);
                               
       
        return 0;
}
