#include<iostream>
#include<vector>
using namespace std;
int bit[10000002];
bool myfunc(vector<int> x,vector<int> y)
{
     if(x[1]<y[1])
     return true;
     if(x[1]==y[1])
     {
      if(x[0]<y[0])
      return true;
      if(x[0]==y[0])
      {
       if(x[3]==0)
       return true;
      }
     }
     return false;
}
void update(int x,int val)
{
     int i;
     for(i=x;i<=10000001;i+=i&-i)
     bit[i]+=val;
}
int value(int x)
{
    int i,ans=0;
    for(i=x;i>0;i-=i&-i)
    ans+=bit[i];
    return ans;
}
main()
{
	freopen("ccost.txt","rt",stdin);
	freopen("out2.txt","wt",stdout);
     int t;
     cin>>t;
     while(t--)
     {
      memset(&bit,0,sizeof(bit));
      int n;
      vector<vector<int> > thelist;
      cin>>n;
      int i;
      for(i=0;i<n;i++)
      {
       vector<int> emp;
       int x,y,z;
       cin>>x>>y>>z;
       emp.push_back(x);
       emp.push_back(y);
       emp.push_back(z);
       emp.push_back(0);
       thelist.push_back(emp);
       emp.clear();
      }
      int q;
      cin>>q;
      int ans[50001][4];
      for(i=1;i<=q;i++)
      {
       int x1,y1,x2,y2;
       vector<int> emp;
       cin>>x1>>y1>>x2>>y2;
       emp.push_back(x1-1);
       emp.push_back(y1-1);
       emp.push_back(i);
       emp.push_back(i);
       emp.push_back(0);
       thelist.push_back(emp);
       emp.clear();
       emp.push_back(x2);
       emp.push_back(y2);
       emp.push_back(i);
       emp.push_back(i);
       emp.push_back(1);
       thelist.push_back(emp);
       emp.clear();
       emp.push_back(x1-1);
       emp.push_back(y2);
       emp.push_back(i);
       emp.push_back(i);
       emp.push_back(2);
       thelist.push_back(emp);
       emp.clear();
       emp.push_back(x2);
       emp.push_back(y1-1);
       emp.push_back(i);
       emp.push_back(i);
       emp.push_back(3);
       thelist.push_back(emp);
       emp.clear();
       }       
       sort(thelist.begin(),thelist.end(),myfunc);
       for(i=0;i<thelist.size();i++)
       {
        if(thelist[i][3]==0)
        {
         update(thelist[i][0]+1,thelist[i][2]);
        }
        else
        {
   
         if(thelist[i][3]!=0)
         ans[thelist[i][3]][thelist[i][4]]=value(thelist[i][0]+1);
         else
         ans[thelist[i][3]][thelist[i][4]]=value(thelist[i][0]+1);
 
        }
       }
  
       for(i=1;i<=q;i++)
       cout<<(ans[i][1]+ans[i][0])-(ans[i][2]+ans[i][3])<<endl;
       thelist.clear();
       
     }
}
