#include <cstdio>
#include <algorithm>
 
using namespace std;
 
struct point {
	double x,y;
};
 
double CCW(point A,point B,point C)
{
	return (B.x-A.x) * (C.y - A.y) - (B.y - A.y) * (C.x - A.x) ;
}
 
bool cmp(point a,point b)
{
	return a.x < b.x;
}
 
int main(void)
{
	int N,ans=0;
	scanf("%d",&N);
	point camp[N+1];
	int dp[N+1],p[N+1],first[N+1];
	dp[0]=0;
	for(int i=1; i<=N; i++) {
		dp[i]=1;
		p[i]=i;
		first[i]=i;
		scanf("%lf%lf",&camp[i].x,&camp[i].y);
	}
	sort(camp+1,camp+N+1,cmp);
	for(int i=2; i<=N; i++) {
		for(int j=i-1; j>=1; j--) {
			double cross1 = CCW(camp[p[j]],camp[j],camp[i]);
			//printf("cross of -> points %d,%d,%d = %lf\n",p[j],j,i,cross1);
			if(cross1 >= 0 && dp[i] <= dp[j] + 1) {
				dp[i] = dp[j] + 1;
				p[i] = j;
				first[i] = first[j];
			}
		}
	}
	for(int i=1; i<=N; i++) {
		ans = max(ans,dp[i]);
	}
	printf("%d\n",ans);
	return 0;
}
