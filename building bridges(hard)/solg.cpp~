#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
#include <vector>
 
#define mp make_pair
#define pii pair<int, int>
#define Y second
#define X first
 
using namespace std;
 
int main(void)
{
	int testcases, N;
	scanf("%d", &testcases);
	while(testcases--)	{	
		N = 0;
		scanf("%d", &N);
		int M[N + 5], tmp = 0 , global_answer = 1;
		pii input[N + 5];
 		memset(M, 0, sizeof( M ) );
		memset(input, 0, sizeof( input ) );
		for(int i = 1; i <= N; i++)	{
			scanf("%d", &tmp);
			input[i].X = tmp + 1000;
			M[i] = -1;
		}
		for(int i = 1; i <= N; i++)	{
			scanf("%d", &tmp);
			input[i].Y = tmp + 1000;
		}
		M[0] = 0;
		M[1] = 1;
		input[0] = mp(0, 0);
		sort(input + 1, input + N + 1);
		//Main Algorithm
		for(int i = 2; i <= N; i++)	{
			//Binary Search
			int low = 1, high = i, sub_answer = 0, mid;
			while(low <= high)	{
				mid = (low+high) / 2;
				if(M[mid] == -1 || input[ M[mid] ].Y > input[i].Y) {
					high = mid - 1;
				} else {
					low = mid + 1;
					sub_answer = mid;
				}
			}
 			sub_answer++;					
 			if(M[sub_answer] == -1 || input[ M[sub_answer] ].Y > input[i].Y) {
				M[sub_answer] = i;
			}
			global_answer = max(sub_answer, global_answer);
		}
		printf("%d\n", global_answer);
	}
	return 0;
}
